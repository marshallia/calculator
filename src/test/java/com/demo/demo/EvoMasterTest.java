package com.demo.demo;

import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import static org.evomaster.client.java.controller.db.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import  java.util.List;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;




/**
 * This file was automatically generated by EvoMaster on 2021-01-26T12:17:42.938+08:00[Asia/Taipei]
 * <br>
 * The generated test suite contains 11 tests
 * <br>
 * Covered targets: 22
 * <br>
 * Used time: 0h 2m 30s
 * <br>
 * Needed budget for current results: 13%
 * <br>
 * 
 */
public class EvoMasterTest {

    
    private static final SutHandler controller = new com.demo.demo.driver.EvoMasterController();
    private static String baseUrlOfSut;
    
    
    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @BeforeEach
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test
    public void test_0() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/times?" + 
                    "a=0.78808385&" + 
                    "b=0.3745221")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.2951548"));
    }
    
    
    @Test
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/plus?" + 
                    "a=0.54267365&" + 
                    "b=0.6789499")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("1.2216235"));
    }
    
    
    @Test
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/mod?" + 
                    "a=0.07236618&" + 
                    "b=0.9187187")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.07236618"));
    }
    
    
    @Test
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/minus?" + 
                    "a=0.55543935&" + 
                    "b=0.56899315")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("-0.013553798"));
    }
    
    
    @Test
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/insertBook?" + 
                    "Author=RIBKcu&" + 
                    "Title=LIimrclbUsOr8wHh")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'author'", containsString("RIBKcu"))
                .body("'title'", containsString("LIimrclbUsOr8wHh"));
    }
    
    
    @Test
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/divide?" + 
                    "a=0.8354826&" + 
                    "b=0.726867")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("1.1494298"));
    }
    
    
    @Test
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/bookList")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", is(true));
    }
    
    
    @Test
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/delete?ID=934")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Book is deleted"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/insertBook?" + 
                    "Author=hiN5QbGOxNqoRZxL&" + 
                    "Title=2NzpLHq_I")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'author'", containsString("hiN5QbGOxNqoRZxL"))
                .body("'title'", containsString("2NzpLHq_I"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/delete?ID=1")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Success!"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/delete?ID=834")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Book is deleted"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/delete?ID=-915814267021968686")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Book is deleted"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/bookList")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("size()", equalTo(0))
                .body("isEmpty()", is(true));
    }
    
    
    @Test
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/mod?" + 
                    "a=0.87175494&" + 
                    "b=0.09250516")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.03920853"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/mod?" + 
                    "a=0.52328867&" + 
                    "b=0.90839404")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.52328867"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/plus?" + 
                    "a=0.21050686&" + 
                    "b=0.121750176")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.33225703"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/insertBook?" + 
                    "Author=9&" + 
                    "Title=CnOb_tcYAl56")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'author'", containsString("9"))
                .body("'title'", containsString("CnOb_tcYAl56"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/edit?" + 
                    "Author=sM&" + 
                    "ID=1&" + 
                    "Title=Nz6h")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'author'", containsString("sM"))
                .body("'title'", containsString("Nz6h"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/insertBook?" + 
                    "Author=7lcqpYi1&" + 
                    "Title=oo7LXEIN3_Ss46")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body("'author'", containsString("7lcqpYi1"))
                .body("'title'", containsString("oo7LXEIN3_Ss46"));
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/times?" + 
                    "a=0.7312583&" + 
                    "b=0.26696724")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("application/json")
                .body(containsString("0.195222"));
    }
    
    
    @Test
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/edit?" + 
                    "Author=MNMWcR7bO4cQ&" + 
                    "ID=825&" + 
                    "Title=sbgoPEeC_zYwL")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Book not found"));
    }
    
    
    @Test
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .get(baseUrlOfSut + "/rest/delete?ID=521")
                .then()
                .statusCode(400)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("Book is deleted"));
    }


}
